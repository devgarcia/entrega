==============================|| ================================

/////////////////////////////////////////////////////////////////////
THIS FUNCTION SHOWS/HIDE VALUES DEPENDING ON THE RADIO BUTTON SELECTED

FILE : orders_return_show_hide.js

/////////////////////////////////////////////////////////////////////


(function($) {
  document.addEventListener("turbolinks:load", function() {
    var address0Value = $('#address0').val()
    var address1Value = $('#address1').val()
    var yesChecked = $('input[name="order[return]"]:checked').val()
    var returnTrue = document.getElementById('order_return_true')
    var returnFalse = document.getElementById('order_return_false')
    var topCardh3 = $('.top-card h3').text()

    var latitude0 = $('#latitude0').val()
    var longitude0 = $('#longitude0').val()

    function translateMapHeadingcomeBack (){
      if ( topCardh3 == "Detalles de la Orden"){
        $('.card-body-left h3').html("Dirección de Recogida y Entrega")         
      } else {
        $('.card-body-left h3').html("Sending and Receiving Location")        
      } 
    }

    function translateMapHeadingcomeBackNot (){
      if ( topCardh3 == "Detalles de la Orden"){
        $('.card-body-left h3').html("Direción de Recogida")
      } else { 
        $('.card-body-left h3').html("Sending Location") 
      }
    }

    function comeBack() {
      $('.card-right').hide()
      $('.recipient-card').hide() 
      translateMapHeadingcomeBack ()
      $('.maps-row .col-md-6').removeClass( 'col-md-6' ).addClass( 'col-md-12' )
      $('#address1').val(address0Value)
      $('#latitude1').val(latitude0)
      $('#longitude1').val(longitude0)
      $(".btn-address-search").click()
    }

    function comeBackNot() {
      $('.card-right').show()  
      $('.recipient-card').show()
      translateMapHeadingcomeBackNot ()
      $('.maps-row .col-md-12').removeClass( 'col-md-12' ).addClass( 'col-md-6' )
    }

    if (yesChecked == "true"){
      comeBack()
    } else {
      comeBackNot()
    }

    returnTrue.addEventListener('click', comeBack);
    returnFalse.addEventListener('click', comeBackNot);
  })
})(jQuery)

==============================|| =============================

/////////////////////////////////////////////////////////////////////

THIS FUNCTION CALCULATES DISTANCE BETWEEN TO POINTS

FILE : distanceBetween2Points.js. Could be added to application.js

/////////////////////////////////////////////////////////////////////



// Get distance between the two order points as the crow flies (stright line)
function getDistanceBetweenOrderPointsInKm() {
  var latitude0 = $('input[id="latitude0"]').val()
  var latitude1 = $('input[id="latitude1"]').val()
  var longitude0 = $('input[id="longitude0"]').val()
  var longitude1 = $('input[id="longitude1"]').val()
  var R = 6371; // Radius of the earth in km
  if ((latitude1 == latitude0) && (longitude0 == longitude1)) {
    return 0
  }
  else {

  function deg2rad(deg) {
    return deg * (Math.PI/180)
  }

  var diffLat = deg2rad(latitude1 - latitude0)
  var diffLon = deg2rad(longitude1 - longitude0)
  var a = 
    Math.sin(diffLat/2) * Math.sin(diffLat/2) +
    Math.cos(deg2rad(latitude0)) * Math.cos(deg2rad(latitude1)) * 
    Math.sin(diffLon/2) * Math.sin(diffLon/2)
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
  var d = R * c; // Distance in km
  return d
  }
}   //console.log(getDistanceBetweenOrderPointsInKm()) // For visualization only on console

==============================|| =============================

/////////////////////////////////////////////////////////////////////

THIS FUNCTION CALCULATES THE DELIVERY COST DEPENDING ON THE DISTANCE

FILE : cost.js

/////////////////////////////////////////////////////////////////////

(function($) {
  document.addEventListener("turbolinks:load", function() {
    var cost = 0
    var basecost = 6000
    var valueKm = 1200
    var k = 1

    function roundNumber(number) {  
      return (Math.round(number * 100)/100).toFixed(2);
    }

    var distanceBOP = getDistanceBetweenOrderPointsInKm()
    var roundedDistanceBOP = roundNumber(distanceBOP) 
    console.log("Rounded DistanceBOPP= " + roundedDistanceBOP)

    var distanceDifference = (distanceBOP - 4) // 4km
    var roundedDistanceDifference = roundNumber(distanceDifference)
    console.log("Distance Difference : " + roundedDistanceDifference) 

    function chargeOver4k (){
      calchargaGretaer4k = (basecost  + (valueKm * roundedDistanceDifference / k))  // .toFixed(2)
      var roundedcalchargaGretaer4k = roundNumber(calchargaGretaer4k)
      return calchargaGretaer4k
    }

    console.log(chargeOver4k ())


    function totalCost (){
      if (roundedDistanceBOP <= 4){
        return cost = basecost
        console.log("DOWN COST =" + cost)
      } else {
        return cost = chargeOver4k ()
        console.log("UPPER COST =" + cost)
      }
    }

    $('input[name="order[cost]').val(totalCost)

    })
})(jQuery)

